function MainRouter(e,t){e.state("home",{url:"/",templateUrl:"views/home.html"}).state("login",{url:"/login",templateUrl:"views/login.html"}).state("register",{url:"/register",templateUrl:"views/register.html"}),t.otherwise("/")}function UserController(e,t){function o(e){var t=e.token?e.token:null;t&&n.getUsers(),n.message=e.message}var n=this;n.allUsers=[],n.user={},n.login=function(){e.login(n.user,o)},n.register=function(){e.register(n.user,o)},n.logout=function(){t.removeToken(),n.allUsers=[],n.user={}},n.getUsers=function(){console.log(e.query()),n.allUsers=e.query()},n.isLoggedIn=function(){return!!t.getToken()},n.isLoggedIn()&&(n.getUsers(),n.user=t.getUser())}function User(e,t){return e(t+"/users/:id",null,{login:{method:"POST",url:t+"/login"},register:{method:"POST",url:t+"/register"},query:{method:"GET",isArray:!0,transformResponse:function(e){return angular.fromJson(e)}}})}function AuthInterceptor(e,t){return{request:function(o){var n=t.getToken();return o.url.match(e)&&n&&(o.headers.Authorization="Bearer "+n),o},response:function(o){return o.config.url.match(e)&&o.data.token&&t.saveToken(o.data.token),o}}}function TokenService(e,t){var o=this;o.saveToken=function(t){e.localStorage.setItem("token",t)},o.getToken=function(){return e.localStorage.getItem("token")},o.removeToken=function(){e.localStorage.removeItem("token")},o.getUser=function(){var e=o.getToken();return t.decodeToken(e)}}function get_location(){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(e){pos={lat:e.coords.latitude,lng:e.coords.longitude},startMap()}):console.log("error: doesn't support geolocation")}function startMap(){map=new google.maps.Map(document.getElementById("map"),{center:pos,zoom:15});var e="img/current_location_icon.png";new google.maps.Marker({position:pos,map:map,icon:e});infowindow=new google.maps.InfoWindow;var t=new google.maps.places.PlacesService(map);t.nearbySearch({location:pos,radius:500,type:"bar"},callback);var o=new google.maps.places.PlacesService(map);o.nearbySearch({location:pos,radius:500,type:"restaurant"},callback)}function callback(e,t){if(t===google.maps.places.PlacesServiceStatus.OK)for(var o=0;o<e.length;o++)createMarker(e[o])}function createMarker(e){var t=(e.geometry.location,new google.maps.Marker({map:map,position:e.geometry.location}));google.maps.event.addListener(t,"click",function(){infowindow.setContent(e.name+'<br /><a href="event.html">Go to Event page</a>'),infowindow.open(map,this)})}angular.module("GetARoundApp",["angular-jwt","ngResource","ui.router"]).constant("API","http://localhost:3000/api").config(function(e){e.interceptors.push("AuthInterceptor")}).config(MainRouter),angular.module("GetARoundApp").controller("usersController",UserController),UserController.$inject=["User","TokenService"],angular.module("GetARoundApp").factory("User",User),User.$inject=["$resource","API"],angular.module("GetARoundApp").factory("AuthInterceptor",AuthInterceptor),AuthInterceptor.$inject=["API","TokenService"],angular.module("GetARoundApp").service("TokenService",TokenService),TokenService.$inject=["$window","jwtHelper"],function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){"use strict";var t="drawer",o="undefined"!=typeof document.ontouchstart,n={init:function(o){return o=e.extend({iscroll:{mouseWheel:!0,preventDefault:!1},showOverlay:!0},o),n.settings={state:!1,events:{opened:"drawer.opened",closed:"drawer.closed"},dropdownEvents:{opened:"shown.bs.dropdown",closed:"hidden.bs.dropdown"}},n.settings["class"]=e.extend({nav:"drawer-nav",toggle:"drawer-toggle",overlay:"drawer-overlay",open:"drawer-open",close:"drawer-close",dropdown:"drawer-dropdown"},o["class"]),this.each(function(){var r=this,s=e(this),a=s.data(t);a||(o=e.extend({},o),s.data(t,{options:o}),n.refresh.call(r),o.showOverlay&&n.addOverlay.call(r),e("."+n.settings["class"].toggle).on("click."+t,function(){return n.toggle.call(r),r.iScroll.refresh()}),e(window).resize(function(){return n.close.call(r),r.iScroll.refresh()}),e("."+n.settings["class"].dropdown).on(n.settings.dropdownEvents.opened+" "+n.settings.dropdownEvents.closed,function(){return r.iScroll.refresh()}))})},refresh:function(){this.iScroll=new IScroll("."+n.settings["class"].nav,e(this).data(t).options.iscroll)},addOverlay:function(){var t=e(this),o=e("<div>").addClass(n.settings["class"].overlay+" "+n.settings["class"].toggle);return t.append(o)},toggle:function(){var e=this;return n.settings.state?n.close.call(e):n.open.call(e)},open:function(){var r=e(this);return o&&r.on("touchmove."+t,function(e){e.preventDefault()}),r.removeClass(n.settings["class"].close).addClass(n.settings["class"].open).css({overflow:"hidden"}).drawerCallback(function(){n.settings.state=!0,r.trigger(n.settings.events.opened)})},close:function(){var r=e(this);return o&&r.off("touchmove."+t),r.removeClass(n.settings["class"].open).addClass(n.settings["class"].close).css({overflow:"auto"}).drawerCallback(function(){n.settings.state=!1,r.trigger(n.settings.events.closed)})},destroy:function(){return this.each(function(){var o=e(this);e(window).off("."+t),o.removeData(t)})}};e.fn.drawerCallback=function(t){var o="transitionend webkitTransitionEnd";return this.each(function(){var n=e(this);n.on(o,function(){return n.off(o),t.call(this)})})},e.fn.drawer=function(o){return n[o]?n[o].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof o&&o?void e.error("Method "+o+" does not exist on jQuery."+t):n.init.apply(this,arguments)}});var map,infowindow,pos;